Ø^
lC:\Data\Jenkins\workspace\TaskIt.NexusUploader\MRP_TaskIt.NexusUploader\TaskIt.NexusUploader\HttpUploader.cs
	namespace		 	
TaskIt		
 
.		 
NexusUploader		 
{

 
class 	
HttpUploader
 
{ 
private 
const 
string 
URL_DELIMETER *
=+ ,
$str- 0
;0 1
private 
readonly 
UploaderOptions (
_options) 1
;1 2
public 
HttpUploader 
( 
UploaderOptions +
options, 3
)3 4
{ 	
_options 
= 
options 
; 
} 	
private%% 

HttpClient%% 
InitHttpClient%% )
(%%) *
out%%* -
Result%%. 4
result%%5 ;
)%%; <
{&& 	
result'' 
='' 
null'' 
;'' 

HttpClient(( 
ret(( 
=(( 
null(( !
;((! "
try)) 
{** 
ret++ 
=++ 
new++ 

HttpClient++ $
{,, 
BaseAddress-- 
=--  !
new--" %
Uri--& )
(--) *
_options--* 2
.--2 3
RepositoryUrl--3 @
+--A B
_options--C K
.--K L
GroupId--L S
+--T U
URL_DELIMETER--V c
+--d e
_options--f n
.--n o

ArtifactId--o y
+--z {
URL_DELIMETER	--| â
+
--ä ã
_options
--å î
.
--î ï
Revision
--ï ù
)
--ù û
}.. 
;.. 
string00 
	authparam00  
=00! "
_options00# +
.00+ ,
Username00, 4
+005 6
$str007 :
+00; <
_options00= E
.00E F
Password00F N
;00N O
byte11 
[11 
]11 
bytes11 
=11 
Encoding11 '
.11' (
UTF811( ,
.11, -
GetBytes11- 5
(115 6
	authparam116 ?
)11? @
;11@ A
var22 
base64String22  
=22! "
Convert22# *
.22* +
ToBase64String22+ 9
(229 :
bytes22: ?
)22? @
;22@ A
ret33 
.33 !
DefaultRequestHeaders33 )
.33) *
Authorization33* 7
=338 9
new33: =
System33> D
.33D E
Net33E H
.33H I
Http33I M
.33M N
Headers33N U
.33U V%
AuthenticationHeaderValue33V o
(33o p
$str33p w
,33w x
base64String	33y Ö
)
33Ö Ü
;
33Ü á
}44 
catch55 
(55 
	Exception55 
)55 
{66 
result77 
=77 
new77 
Result77 #
(77# $
	EExitCode77$ -
.77- .
INVALID_PARAMS77. <
,77< =
$"77> @
Check 77@ F
{77F G
_options77G O
.77O P
RepositoryUrl77P ]
}77] ^
 and 77^ c
{77c d
_options77d l
.77l m
GroupId77m t
}77u v
 and 77v {
{77{ |
_options	77| Ñ
.
77Ñ Ö

ArtifactId
77Ö è
}
77è ê
 and 
77ê ï
{
77ï ñ
_options
77ñ û
.
77û ü
Revision
77ü ß
}
77ß ®
"
77© ™
)
77™ ´
;
77´ ¨
}88 
return99 
ret99 
;99 
}:: 	
public@@ 
async@@ 
Task@@ 
<@@ 
Result@@  
>@@  !
UploadAsync@@" -
(@@- .
string@@. 4
[@@4 5
]@@5 6
	filePaths@@7 @
)@@@ A
{AA 	
ResultBB 
retBB 
=BB 
nullBB 
;BB 
usingDD 
(DD 
varDD 
clientDD 
=DD 
InitHttpClientDD  .
(DD. /
outDD/ 2
retDD3 6
)DD6 7
)DD7 8
{EE 
ifFF 
(FF 
retFF 
!=FF 
nullFF 
)FF  
{GG 
retHH 
.HH 
CodeHH 
=HH 
	EExitCodeHH (
.HH( )
UPLOAD_ERRORHH) 5
;HH5 6
returnII 
retII 
;II 
}JJ 
intKK 

errorCountKK 
=KK  
$numKK! "
;KK" #
foreachLL 
(LL 
varLL 
itemLL !
inLL" $
	filePathsLL% .
)LL. /
{MM 
byteNN 
[NN 
]NN 
fileContentNN &
=NN' (
FileNN) -
.NN- .
ReadAllBytesNN. :
(NN: ;
itemNN; ?
)NN? @
;NN@ A
varOO 
urlOO 
=OO 
ConstructUrlOO *
(OO* +
itemOO+ /
,OO/ 0
clientOO1 7
)OO7 8
;OO8 9
ConsolePP 
.PP 
WritePP !
(PP! "
$"PP" $
	Pushing: PP$ -
{PP- .
itemPP. 2
}PP2 3
 --> PP3 8
{PP8 9
urlPP9 <
.PP< =
ToStringPP= E
(PPE F
)PPF G
}PPG H
"PPH I
)PPI J
;PPJ K
usingRR 
(RR 
HttpRequestMessageSS &
requestSS' .
=SS/ 0
newSS1 4
HttpRequestMessageSS5 G
(SSG H

HttpMethodSSH R
.SSR S
PutSSS V
,SSV W
urlSSX [
)SS[ \
{TT 
ContentUU 
=UU  !
newUU" %
ByteArrayContentUU& 6
(UU6 7
fileContentUU7 B
)UUB C
}VV 
)VV 
{WW 
SetContentTypeXX &
(XX& '
requestXX' .
,XX. /
itemXX0 4
)XX4 5
;XX5 6
usingZZ 
(ZZ 
varZZ "
responseZZ# +
=ZZ, -
awaitZZ. 3
clientZZ4 :
.ZZ: ;
	SendAsyncZZ; D
(ZZD E
requestZZE L
)ZZL M
.ZZM N
ConfigureAwaitZZN \
(ZZ\ ]
falseZZ] b
)ZZb c
)ZZc d
{[[ 
if\\ 
(\\  
response\\  (
.\\( )
IsSuccessStatusCode\\) <
)\\< =
{]] 
Console^^  '
.^^' (
	WriteLine^^( 1
(^^1 2
Messages^^2 :
.^^: ;
MSG_UPLOAD_Ok^^; H
)^^H I
;^^I J
}__ 
else``  
{aa 
retbb  #
=bb$ %
newbb& )
Resultbb* 0
(bb0 1
	EExitCodebb1 :
.bb: ;
UPLOAD_ERRORbb; G
,bbG H
responsebbI Q
.bbQ R
ReasonPhrasebbR ^
)bb^ _
;bb_ `
Consolecc  '
.cc' (
	WriteLinecc( 1
(cc1 2
retcc2 5
.cc5 6
ToStringcc6 >
(cc> ?
)cc? @
)cc@ A
;ccA B

errorCountdd  *
++dd* ,
;dd, -
}ee 
}ff 
}gg 
}hh 
Consoleii 
.ii 
	WriteLineii !
(ii! "
$"ii" $
Finished Uploading ii$ 7
{ii7 8
	filePathsii8 A
.iiA B
LengthiiB H
}iiH I
 Files with iiI U
{iiU V

errorCountiiV `
}ii` a
 Errorsiia h
"iih i
)iii j
;iij k
}jj 
returnkk 
retkk 
;kk 
}ll 	
publicrr 
asyncrr 
Taskrr 
<rr 
Resultrr  
>rr  !
RemoveAsyncrr" -
(rr- .
stringrr. 4
[rr4 5
]rr5 6
	filePathsrr7 @
)rr@ A
{ss 	
Resulttt 
rettt 
=tt 
nulltt 
;tt 
usingvv 
(vv 
varvv 
clientvv 
=vv 
InitHttpClientvv  .
(vv. /
outvv/ 2
retvv3 6
)vv6 7
)vv7 8
{ww 
ifxx 
(xx 
retxx 
!=xx 
nullxx 
)xx  
{yy 
returnzz 
retzz 
;zz 
}{{ 
Console|| 
.|| 
	WriteLine|| !
(||! "
Messages||" *
.||* +
MSG_ROLLBACK||+ 7
)||7 8
;||8 9
foreach}} 
(}} 
var}} 
item}} !
in}}" $
	filePaths}}% .
)}}. /
{~~ 
var 
url 
= 
ConstructUrl *
(* +
item+ /
,/ 0
client1 7
)7 8
;8 9
Console
ÄÄ 
.
ÄÄ 
	WriteLine
ÄÄ %
(
ÄÄ% &
$"
ÄÄ& (

Removing: 
ÄÄ( 2
{
ÄÄ2 3
url
ÄÄ3 6
.
ÄÄ6 7
ToString
ÄÄ7 ?
(
ÄÄ? @
)
ÄÄ@ A
}
ÄÄA B
"
ÄÄB C
)
ÄÄC D
;
ÄÄD E
using
ÅÅ 
(
ÅÅ  
HttpRequestMessage
ÇÇ &
request
ÇÇ' .
=
ÇÇ/ 0
new
ÇÇ1 4 
HttpRequestMessage
ÇÇ5 G
(
ÇÇG H

HttpMethod
ÇÇH R
.
ÇÇR S
Delete
ÇÇS Y
,
ÇÇY Z
url
ÇÇ[ ^
)
ÇÇ^ _
)
ÇÇ_ `
{
ÉÉ 
await
ÖÖ 
client
ÖÖ $
.
ÖÖ$ %
	SendAsync
ÖÖ% .
(
ÖÖ. /
request
ÖÖ/ 6
)
ÖÖ6 7
.
ÖÖ7 8
ConfigureAwait
ÖÖ8 F
(
ÖÖF G
false
ÖÖG L
)
ÖÖL M
;
ÖÖM N
}
ÜÜ 
}
áá 
}
àà 
Console
ââ 
.
ââ 
	WriteLine
ââ 
(
ââ 
Messages
ââ &
.
ââ& '!
MSG_ROLLBACK_FINISH
ââ' :
)
ââ: ;
;
ââ; <
return
ää 
ret
ää 
;
ää 
}
ãã 	
private
ìì 
void
ìì 
SetContentType
ìì #
(
ìì# $ 
HttpRequestMessage
ìì$ 6
request
ìì7 >
,
ìì> ?
string
ìì@ F
filename
ììG O
)
ììO P
{
îî 	
string
ïï 
mimeType
ïï 
=
ïï 
MimeMapping
ïï )
.
ïï) *
MimeUtility
ïï* 5
.
ïï5 6
GetMimeMapping
ïï6 D
(
ïïD E
filename
ïïE M
)
ïïM N
;
ïïN O
request
ññ 
.
ññ 
Content
ññ 
.
ññ 
Headers
ññ #
.
ññ# $
Add
ññ$ '
(
ññ' (
$str
ññ( 6
,
ññ6 7
mimeType
ññ8 @
)
ññ@ A
;
ññA B
}
óó 	
private
üü 
Uri
üü 
ConstructUrl
üü  
(
üü  !
string
üü! '
filename
üü( 0
,
üü0 1

HttpClient
üü2 <
client
üü= C
)
üüC D
{
†† 	
var
°° 
relativePath
°° 
=
°° 
filename
°° '
.
°°' (
Replace
°°( /
(
°°/ 0
_options
°°0 8
.
°°8 9
SourceFolder
°°9 E
,
°°E F
$str
°°G I
)
°°I J
.
°°J K
Replace
°°K R
(
°°R S
$str
°°S V
,
°°V W
$str
°°X Z
)
°°Z [
.
°°[ \
Replace
°°\ c
(
°°c d
$str
°°d h
,
°°h i
$str
°°j l
)
°°l m
;
°°m n
return
¢¢ 
new
¢¢ 
Uri
¢¢ 
(
¢¢ 
client
¢¢ !
.
¢¢! "
BaseAddress
¢¢" -
.
¢¢- .
ToString
¢¢. 6
(
¢¢6 7
)
¢¢7 8
+
¢¢9 :
relativePath
¢¢; G
)
¢¢G H
;
¢¢H I
}
££ 	
}
§§ 
}•• €
wC:\Data\Jenkins\workspace\TaskIt.NexusUploader\MRP_TaskIt.NexusUploader\TaskIt.NexusUploader\Options\UploaderOptions.cs
	namespace 	
TaskIt
 
. 
NexusUploader 
. 
Options &
{ 
public		 

class		 
UploaderOptions		  
{

 
[ 	
Option	 
( 
$char 
, 
$str 
, 
Required %
=& '
true( ,
,, -
HelpText. 6
=7 8
$str9 P
)P Q
]Q R
public 
string 
Username 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Option	 
( 
$char 
, 
$str 
,  
Required! )
=* +
true, 0
,0 1
HelpText2 :
=; <
$str= X
)X Y
]Y Z
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Option	 
( 
$char 
, 
$str  
,  !
Required" *
=+ ,
true- 1
,1 2
HelpText3 ;
=< =
$str> [
)[ \
]\ ]
public 
string 
RepositoryUrl #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[   	
Option  	 
(   
$char   
,   
$str   
,   
Required   '
=  ( )
false  * /
,  / 0
HelpText  1 9
=  : ;
$str  < ^
)  ^ _
]  _ `
public!! 
string!! 
SourceFolder!! "
{!!# $
get!!% (
;!!( )
set!!* -
;!!- .
}!!/ 0
=!!1 2
null!!3 7
;!!7 8
[&& 	
Option&&	 
(&& 
$char&& 
,&& 
$str&& 
,&& 
Required&&  (
=&&) *
true&&+ /
,&&/ 0
HelpText&&1 9
=&&: ;
$str&&< ^
)&&^ _
]&&_ `
public'' 
string'' 
GroupId'' 
{'' 
get''  #
;''# $
set''% (
;''( )
}''* +
[,, 	
Option,,	 
(,, 
$char,, 
,,, 
$str,, !
,,,! "
Required,,# +
=,,, -
true,,. 2
,,,2 3
HelpText,,4 <
=,,= >
$str,,? d
),,d e
],,e f
public-- 
string-- 

ArtifactId--  
{--! "
get--# &
;--& '
set--( +
;--+ ,
}--- .
[22 	
Option22	 
(22 
$char22 
,22 
$str22 &
,22& '
Required22( 0
=221 2
true223 7
,227 8
HelpText229 A
=22B C
$str22D n
)22n o
]22o p
public33 
string33 
Revision33 
{33  
get33! $
;33$ %
set33& )
;33) *
}33+ ,
}44 
}55 î0
gC:\Data\Jenkins\workspace\TaskIt.NexusUploader\MRP_TaskIt.NexusUploader\TaskIt.NexusUploader\Program.cs
	namespace 	
TaskIt
 
. 
NexusUploader 
{		 
class

 	
Program


 
{ 
private 
Program 
( 
) 
{ 	
} 	
static 
int 
Main 
( 
string 
[ 
]  
args! %
)% &
{ 	
int 
exitCode 
= 
( 
int 
)  
	EExitCode  )
.) *
SUCCESS* 1
;1 2
var 
versionString 
= 
Assembly  (
.( )
GetEntryAssembly) 9
(9 :
): ;
.( )
GetCustomAttribute) ;
<; <1
%AssemblyInformationalVersionAttribute< a
>a b
(b c
)c d
.  ( ) 
InformationalVersion  ) =
.!!( )
ToString!!) 1
(!!1 2
)!!2 3
;!!3 4
Console## 
.## 
	WriteLine## 
(## 
$"##  
NexusUploader ##  .
{##. /
versionString##/ <
}##< =
	 start...##= F
"##F G
)##G H
;##H I
var&& 
ret&& 
=&& 
Parser&& 
.&& 
Default&& $
.&&$ %
ParseArguments&&% 3
<&&3 4
UploaderOptions&&4 C
>&&C D
(&&D E
args&&E I
)&&I J
.&&J K
	MapResult&&K T
(&&T U
('' 
UploaderOptions''  
opts''! %
)''% &
=>''' )
PerformAction''* 7
(''7 8
opts''8 <
)''< =
,''= >
errs(( 
=>(( 
new(( 
Result(( "
(((" #
	EExitCode((# ,
.((, -
SUCCESS((- 4
,((4 5
$str((6 8
)((8 9
)((9 :
;((: ;
if** 
(** 
ret** 
!=** 
null** 
&&** 
ret** "
.**" #
Code**# '
!=**( *
	EExitCode**+ 4
.**4 5
SUCCESS**5 <
)**< =
{++ 
Console,, 
.,, 
	WriteLine,, !
(,,! "
$",," $
ERROR: ,,$ +
{,,+ ,
ret,,, /
.,,/ 0
ToString,,0 8
(,,8 9
),,9 :
},,: ;
",,; <
),,< =
;,,= >
exitCode-- 
=-- 
(-- 
int-- 
)--  
ret--  #
.--# $
Code--$ (
;--( )
}.. 
Console00 
.00 
	WriteLine00 
(00 
$"00  
NexusUploader 00  .
{00. /
versionString00/ <
}00< =
	 finished00= F
"00F G
)00G H
;00H I
return11 
exitCode11 
;11 
}22 	
private99 
static99 
Result99 
PerformAction99 +
(99+ ,
UploaderOptions99, ;
options99< C
)99C D
{:: 	
var<< 
	filePaths<< 
=<< 
GetFilePaths<< (
(<<( )
options<<) 0
.<<0 1
SourceFolder<<1 =
,<<= >
out<<? B
var<<C F
ret<<G J
)<<J K
;<<K L
if== 
(== 
ret== 
!=== 
null== 
)== 
{>> 
return?? 
ret?? 
;?? 
}@@ 
varCC 
uploaderCC 
=CC 
newCC 
HttpUploaderCC +
(CC+ ,
optionsCC, 3
)CC3 4
;CC4 5
retEE 
=EE 
uploaderEE 
.EE 
UploadAsyncEE &
(EE& '
	filePathsEE' 0
)EE0 1
.EE1 2

GetAwaiterEE2 <
(EE< =
)EE= >
.EE> ?
	GetResultEE? H
(EEH I
)EEI J
;EEJ K
ifFF 
(FF 
retFF 
!=FF 
nullFF 
)FF 
{GG 
retHH 
=HH 
uploaderHH 
.HH 
RemoveAsyncHH *
(HH* +
	filePathsHH+ 4
)HH4 5
.HH5 6

GetAwaiterHH6 @
(HH@ A
)HHA B
.HHB C
	GetResultHHC L
(HHL M
)HHM N
;HHN O
}II 
returnJJ 
retJJ 
;JJ 
}KK 	
staticUU 
stringUU 
[UU 
]UU 
GetFilePathsUU $
(UU$ %
stringUU% +
pathUU, 0
,UU0 1
outUU2 5
ResultUU6 <
resultUU= C
)UUC D
{VV 	
resultWW 
=WW 
nullWW 
;WW 
ifXX 
(XX 
stringXX 
.XX 
IsNullOrEmptyXX $
(XX$ %
pathXX% )
)XX) *
)XX* +
{YY 
pathZZ 
=ZZ 
EnvironmentZZ "
.ZZ" #
CurrentDirectoryZZ# 3
;ZZ3 4
}[[ 
string\\ 
[\\ 
]\\ 
	filePaths\\ 
=\\  
null\\! %
;\\% &
try]] 
{^^ 
	filePaths__ 
=__ 
	Directory__ %
.__% &
GetFiles__& .
(__. /
path__/ 3
,__3 4
$str__5 8
,__8 9
SearchOption__: F
.__F G
AllDirectories__G U
)__U V
;__V W
}`` 
catchaa 
(aa 
	Exceptionaa 
)aa 
{bb 
resultcc 
=cc 
newcc 
Resultcc #
(cc# $
	EExitCodecc$ -
.cc- .
INVALID_FOLDERcc. <
,cc< =
pathcc> B
)ccB C
;ccC D
}dd 
returnff 
	filePathsff 
;ff 
}gg 	
}hh 
}ii  
oC:\Data\Jenkins\workspace\TaskIt.NexusUploader\MRP_TaskIt.NexusUploader\TaskIt.NexusUploader\Types\EExitCode.cs
	namespace 	
TaskIt
 
. 
NexusUploader 
. 
Types $
{ 
[ 
SuppressMessage 
( 
$str 
, 
$str R
,R S
JustificationT a
=b c
$strd o
)o p
]p q
public		 

enum		 
	EExitCode		 
{

 
SUCCESS 
= 
$num 
, 
INVALID_PARAMS 
= 
$num 
, 
INVALID_FOLDER 
= 
$num 
, 
UPLOAD_ERROR 
= 
$num 
} 
} œ
nC:\Data\Jenkins\workspace\TaskIt.NexusUploader\MRP_TaskIt.NexusUploader\TaskIt.NexusUploader\Types\Messages.cs
	namespace 	
TaskIt
 
. 
NexusUploader 
. 
Types $
{ 
[		 
SuppressMessage		 
(		 
$str		 
,		 
$str		 R
,		R S
Justification		T a
=		b c
$str		d o
)		o p
]		p q
public

 

static

 
class

 
Messages

  
{ 
public 
static 
readonly 
string %

MSG_UPLOAD& 0
=1 2
$str3 A
;A B
public 
static 
readonly 
string %
MSG_UPLOAD_Ok& 3
=4 5
$str6 =
;= >
public 
static 
readonly 
string %
MSG_UPLOAD_ERROR& 6
=7 8
$str9 E
;E F
public 
static 
readonly 
string %
MSG_ROLLBACK& 2
=3 4
$str5 B
;B C
public 
static 
readonly 
string %
MSG_ROLLBACK_OK& 5
=6 7
$str8 E
;E F
public 
static 
readonly 
string %
ERR_UPLOAD_FAILED& 7
=8 9
$str: Q
;Q R
public 
static 
readonly 
string %

ERR_PARAMS& 0
=1 2
$str3 O
;O P
public 
static 
readonly 
string %

ERR_FOLDER& 0
=1 2
$str3 K
;K L
public 
static 
readonly 
string %
MSG_ROLLBACK_FINISH& 9
=: ;
$str< U
;U V
} 
} Ö
lC:\Data\Jenkins\workspace\TaskIt.NexusUploader\MRP_TaskIt.NexusUploader\TaskIt.NexusUploader\Types\Result.cs
	namespace 	
TaskIt
 
. 
NexusUploader 
. 
Types $
{ 
public 

class 
Result 
{ 
public 
	EExitCode 
Code 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Result 
( 
) 
{ 	
} 	
public 
Result 
( 
	EExitCode 
code  $
,$ %
string& ,
message- 4
)4 5
{   	
Code!! 
=!! 
code!! 
;!! 
Message"" 
="" 
message"" 
;"" 
}## 	
public)) 
override)) 
string)) 
ToString)) '
())' (
)))( )
{** 	
return++ 
$"++ 
{++ 
Code++ 
}++ 
 - ++ 
{++ 
Message++ &
}++& '
"++' (
;++( )
},, 	
}.. 
}// 